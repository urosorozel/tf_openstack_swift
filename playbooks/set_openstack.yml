- name: Install deps
  hosts: aio 
  tasks:
   - name: Install
     apt:
       name:
         - gcc
           #- python-dev
           #- python-libvirt
         - python3-dev
         - python3-libvirt
           #- python-guestfs
         - python3-guestfs
         - liberasurecode-dev #swift
         - openvswitch-switch
         - nginx
       update_cache: yes

   - name: Add pxe OVS bridge
     shell: |
         ovs-vsctl add-br br-pxe
         ovs-vsctl add-port br-pxe ens4
     ignore_errors: yes

   - name: Update
     shell: |
         netplan apply

   - name: Stop nginx
     service:
       name: nginx
       state: stopped

   - name: Remove default nginx site
     file:
       path: etc/nginx/sites-enabled/default
       state: absent

   - name: Include dns
     include: dns.yml

- name: Set Openstack
  hosts: aio
  tasks:
   - name: Install python3 pip
     apt:
       name:
          - python3-pip
       # pip3 install -U pip setuptools

   - name: pip self-update
     pip:
       name: pip
       state: latest

   - name: pip self-update
     pip:
       name: setuptools
       state: latest

   - name: Install latest openstack sdk
     pip:
        name: openstacksdk 
        extra_args: "--ignore-installed PyYAML"

   - name: Clone repo
     git:
       repo: 'https://github.com/urosorozel/openstack-ops.git'
       dest: /opt/openstack-ops
       version: master

   - name: Set git creds store
     git_config:
       name: credential.helper
       scope: global
       value: 'store --file ~/.my-credentials'

   - name: Add credentials token
     command: git credential-store --file ~/.my-credentials store
     args:
       stdin: |
         protocol=https
         host=github.com
         username={{ lookup('env', 'GIT_TOKEN') | default() }}
         password={{ lookup('env', 'GIT_TOKEN') | default() }}
     environment:
       GIT_TOKEN:

   - name: Run deploy-rpco.sh
     command: /opt/openstack-ops/scripts/deploy-rpco.sh
     args:
       stdin: |
         demo
       creates: /etc/ansible
     environment:
       OSA_RUN_PLAY: false
       SETUP_ARA: false
       OSA_RELEASE: "{{ osa_release }}"

   - name: Update Swift proxy template to bind on openstack_service_bind_address
     replace:
       path: /etc/ansible/roles/os_swift/templates/proxy-server.conf.j2
       regexp: "bind_ip = 0.0.0.0"
       replace: "{% raw %}bind_ip = {{ openstack_service_bind_address }}{% endraw %}"

       #   - name: Disable separate ironic inspector tftp
       #     lineinfile:
       #       path: /etc/ansible/roles/os_ironic/templates/dnsmasq.conf.j2
       #       state: absent
       #       regexp: '*.tftp*.'

   - name: Copy AIO swift play
     copy:
       src: ../files/set_swift.yml
       dest: /opt/openstack-ansible/set_swift.yml
       remote_src: no

   - name: Run Swift prepare
     command: openstack-ansible /opt/openstack-ansible/set_swift.yml

     #   - name: Add rules
     #     iptables:
     #       action: insert
     #       table: nat
     #       chain: OUTPUT
     #       out_interface: lo
     #       destination: 127.0.0.1
     #       protocol: tcp
     #       jump: DNAT
     #       to_destination: "{{ ansible_default_ipv4.address }}:3306"
     #       comment: "Forward localhost mysql to ip address"

   - name: Allow localnet redirect
     sysctl:
       name: net.ipv4.conf.all.route_localnet
       value: '1'
       state: present

   - name: Add control nodes
     template:
       src: ../openstack/conf.d/os-control-plane.yml.j2
       dest: /etc/openstack_deploy/conf.d/os-control-plane.yml
     tags:
       - template

   - name: Add swift nodes
     template:
       src: ../openstack/conf.d/os-swift.yml.j2
       dest: /etc/openstack_deploy/conf.d/os-swift.yml
     tags:
       - template

   - name: Copy user_local_variables.yml
     copy:
       src: ../openstack/user_local_variables.yml
       dest: /etc/openstack_deploy/user_local_variables.yml
       remote_src: no
     tags:
       - template

   - name: Copy openstack_user_config.yml
     copy:
       src: ../openstack/openstack_user_config.yml
       dest: /etc/openstack_deploy/openstack_user_config.yml
       remote_src: no
     tags:
       - template

   - name: insert/update HTML surrounded by custom markers after <body> line
     blockinfile:
       path: /etc/openstack_deploy/user_secrets.yml
       marker: "# {mark} ANSIBLE MANAGED BLOCK"
       insertafter: "EOF"
       content: |
            ironic_inspector_oslomsg_rpc_password:
            ironic_inspector_swift_password:

   - name: Add hosts
     blockinfile:
       path: /etc/hosts
       marker: "# {mark} DNS HOSTS"
       insertafter: "EOF"
       content: |
         10.200.0.100 public public.openstack-aio.net
         172.29.236.100 private private.openstack-aio.net

   - name: Slurp hosts file
     slurp:
       src: /root/.ssh/id_rsa.pub
     register: slurpfile


- hosts: all
  remote_user: ubuntu
  tasks:
   - name: Deploy SSH-Keys to remote host
     authorized_key:
       user: root
       key: "{{ hostvars['aio-01.openstack-aio.net'].slurpfile['content'] | b64decode }}"

- name: Set Openstack
  hosts: aio-01.openstack-aio.net
  tasks:

   - name: Remove
     file:
       path: "{{ item }}"
       state: absent
     with_items:
      - /etc/openstack_deploy/conf.d/os-computes.yml
      - /etc/openstack_deploy/conf.d/os-storage.yml
     tags:
      - template

   - name: Run
     command: /opt/openstack-ops/scripts/deploy-rpco.sh
     args:
       chdir: /root
     environment:
       OSA_RUN_PLAY: "true"
       SKIP_PROMPTS: "true"
       OSA_RELEASE: "{{ osa_release }}"
     tags:
      - template
